import{B as u,N as o,w as y,O as h}from"./index-BGoMBcT-.js";const g=()=>{const{user:e}=u(),i=()=>o.get("/sanctum/csrf-cookie");return{addHistory:async d=>{const l={serialNumber:d.serialNumber,userId:e==null?void 0:e.id,status:d.status};console.log(l),await i(),o.post("/api/scan-history",l).then(c=>{console.log(c)}).catch(c=>{if(c.response.status!==422)throw c})}}},N=()=>{const e=()=>o.get("/sanctum/csrf-cookie"),i=y(),{addHistory:r}=g(),{data:d,error:l,mutate:c}=h("/api/cylinder",()=>o.get("/api/cylinder").then(s=>s.data).catch(s=>{if(s.response.status!==409)throw s}));return{cylinder:d,checkSerial:async({setModalOpen:s,...n})=>{await e(),o.get(`/api/cylinder/${n.eccId}`).then(t=>{if(console.log(t.data),t.data.data){const a={serialNumber:n.eccId,status:1};r(a),i("/scanned-result",{replace:!0,state:t.data})}else s(!0);c()}).catch(t=>{if(t.response.status!==422)throw t})},addCylinder:async s=>{console.log(s);const n={serialNumber:s,isDisposed:2,status:"Storage",location:"None"};await e(),o.post("/api/cylinder",n).then(t=>{const a={serialNumber:s,status:2};console.log(t),r(a),i("/scanned-result",{state:t.data}),c()}).catch(t=>{if(t.response.status!==422)throw t})},updateCylinder:async s=>{const n={serialNumber:s.serialNumber,isDisposed:s.isDisposed,status:s.status,cycle:s.cycle},t=s.id;await e(),o.put(`/api/cylinder/${t}`,n).then(a=>{console.log(a)}).catch(a=>{if(a.response.status!==409)throw a})}}};export{N as u};
